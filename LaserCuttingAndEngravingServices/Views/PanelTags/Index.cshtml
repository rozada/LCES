@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Panel Tags</h1>


<label for="selPlateDimenions">Select Dimensions (W x H):</label>
<select id="selPlateDimensions">
    <option value="1,1">1" x 1"</option>
    <option value="2,1">2" x 1"</option>
    <option value="3,1">3" x 1"</option>
    <option value="4,1">4" x 1"</option>
    <option value="5,1">5" x 1"</option>
    <option value="6,1">6" x 1"</option>
    <option value="7,1">7" x 1"</option>
    <option value="8,1">8" x 1"</option>
    <option value="9,1">9" x 1"</option>
    <option value="10,1">10" x 1"</option>
    <option value="1,2">1" x 2"</option>
    <option value="2,2">2" x 2</option>
    <option value="3,2">3" x 2"</option>
    <option value="4,2">4" x 2"</option>
    <option value="5,2">5" x 2"</option>
    <option value="6,2">6" x 2"</option>
    <option value="7,2">7" x 2"</option>
    <option value="8,2">8" x 2"</option>
    <option value="9,2">9" x 2"</option>
    <option value="10,2">10" x 2"</option>
    <option value="1,3">1" x 3"</option>
    <option value="2,3">2" x 3"</option>
    <option value="3,3">3" x 3"</option>
    <option value="4,3">4" x 3"</option>
    <option value="5,3">5" x 3"</option>
    <option value="6,3">6" x 3"</option>
    <option value="7,3">7" x 3"</option>
    <option value="8,3">8" x 3"</option>
    <option value="9,3">9" x 3"</option>
    <option value="10,3">10" x 3"</option>
    <option value="1,4">1" x 4"</option>
    <option value="2,4">2" x 4"</option>
    <option value="3,4">3" x 4"</option>
    <option value="4,4">4" x 4"</option>
    <option value="5,4">5" x 4"</option>
    <option value="6,4">6" x 4"</option>
    <option value="7,4">7" x 4"</option>
    <option value="8,4">8" x 4"</option>
    <option value="9,4">9" x 4"</option>
    <option value="10,4">10" x 4"</option>
</select>
@*<input id="width" type="range" name="points" min="0" max="10"/>
    <input id="height" type="range" name="points" min="0" max="10" orient="vertical"/>*@

<label for="selPlateBackground">Select Background:</label>
<select id="selPlateBackground">
    <option value="#0000ff" style="background: blue;">blue</option>
    <option value="#00ff00" style="background: green;">green</option>
    <option value="#ff0000" style="background: red;">red</option>
    <option value="#ffffff" style="background: white;" selected>white</option>
</select>

<!-- Clonable invisible elements -->

<input id="inpLine" class="text-input" style="visibility: collapse" type="text" />

<br/>

<select id="selFontSize" style="visibility: collapse">
    <option value="6" style="font-size: 6px">6</option>
    <option value="8" style="font-size: 8px">8</option>
    <option value="10" style="font-size: 10px">10</option>
    <option value="11" style="font-size: 11px">11</option>
    <option value="12" style="font-size: 12px">12</option>
    <option value="14" style="font-size: 14px">14</option>
    <option value="16" style="font-size: 16px">16</option>
    <option value="18" style="font-size: 18px" >18</option>
</select>


<br />

<select id="selFontFamily" style="visibility: collapse; width: 100px" title="Fonts">
    <option style="font-family: Arial; font-style: italic; opacity: .3; background-color: gray; color: white" disabled selected>Select Font</option>
    <option style="font-family: Arial">Arial</option>
    <option style="font-family: Courier New">Courier New</option>
    <option style="font-family: Times New Roman">Times New Roman</option>
</select>

<br />
<div id="dvVertCenter" style="visibility:collapse"><button style="height: 25px; width: 24px; background: no-repeat url(/img/vertical_align_center.png);" />&nbsp;</div>
<div id="dvHorzCenter" style="visibility:collapse"><button style="height: 25px; width: 24px; background: no-repeat url(/img/horizontal_align_center.png);" />&nbsp;</div>


<!-- Clonable invisible elements -->


<div class="row">
    <div class="col-md-6" style="border-width: .5px; border-style: solid; min-height: 50px;">
        <button id="btnAddLine">Add Text Line</button>
        <table id="tblLines">

            <tbody>
            </tbody>
        </table>
    </div>
    <div class="col-md-6">
        <!-- DPI IS 96 - NOT SURE IF THIS CAN BE CHANGED. -->
        <div id="dvSVGContainer" style="border-style: solid; color: rebeccapurple; border-width: 0.5px;">
            <svg id="svg" width="550" height="350" style="border-style: solid; color: aqua;">
            </svg>
            <div id="tbdiv" class="text-edit">
                <div id="tbdivheader">
                    <img src="~/img/move-cursor.svg" style="width:15px; height: 15px; border-width: .5px; border-style: solid" />
                </div>
                <div id="editTextContainer" class="editable" style="font-size: 18px; font-family: Courier New; text-align: center">
                    <p class="editable" contenteditable="true" id="txt">Charles</p>
                </div>
                @*<table style="width: 100%; border-width: .5px; border-style: solid; border-color:black;">
                        <tr>
                            <td id="divLeftAlign"><img src="~/img/left-alignment.svg" class="text-alignment" /></td>
                            <td id="divCenterAlign"><img src="~/img/center-alignment.svg" class="text-alignment" /></td>
                            <td id="divRightAlign"><img src="~/img/right-alignment.svg" class="text-alignment" /></td>
                        </tr>
                    </table>*@
            </div>
        </div>
    </div>
</div>


<div>
    <input type="button" id="btnExportSVG" value="Export SVG" />
    <input type="button" id="btnAddItem3" value="Add Item 3" />
</div>

<svg id="svg2" width="100" height="100">
    <text x="0" y="0" dy="12" fill="black">One</text>
</svg>
<div style="width:550px; height: 350px; border-style: solid; border-width: 1px">
    @* <img id="svgURIDisplay">*@
    <object id="objSVGDisplay" data="" type="image/svg+xml" width="550" height="350">
    </object>

</div>
<p>waz up</p>
<svg width="400" height="200">
    <use xlink:href="#svg"></use>
</svg>
@*<div>
        <img id="svgURIDisplay" src="~/img/move-cursor.svg">
    </div>*@


@section Scripts{
    <script src="~/js/vectoreditor/underscore.js"></script>
    <script src="~/js/jquery/jquery.autosize.min.js"></script>
    <script src="~/js//vectoreditor/snap.svg-min.js"></script>
    <script src="~/js/vectoreditor/vectoreditor.js"></script>
    <script src="~/js/vectoreditor/texteditor.js"></script>
    <script>

        //vectorEditor.createRectangle(0, 0, 500, 150, "rgb(255, 0, 0)", "rgb(0, 0, 0)");
        //vectorEditor.centerTextEditor();
        var DPI = 96;


        $(document).ready(function () {

            setSelectedBackgroundColor();

            initializeEditableRectangle();

            //#region Initialization Methods

            function initializeEditableRectangle() {

                var str = $("#selPlateDimensions").val();
                var dims = str.split(',');
                var xPix = parseInt(dims[0]) * DPI;
                var yPix = parseInt(dims[1]) * DPI;

                var color = $("#selPlateBackground").find('option:selected').attr('value');

                // RESET THE svg dimensions here
                console.log("init width: " + xPix);

                console.log($("#dvSVGContainer"));
                //.css({ width: 100 }); ///.height(yPix);
                vectorEditor.createRectangle(0, 0, xPix, yPix, color, "rgb(0, 0, 0)");
                $("#dvSVGContainer").width(xPix).height(yPix);

                vectorEditor.centerTextEditor();
            }

            function initializeUserControls() {
                initializeDimensionsDropdown();
            }


            function initializeDimensionsDropdown() {
                //var option = document.createElement("option");
                //$("#selDimensions").
            }
            //#endregion Initialization Methods

            $("#selPlateDimensions").change(function () {
                console.log("selPlateDimensionsChanged");
                initializeEditableRectangle();


                //  var selected = $("select[name='selPlateDimenions'] option:selected");
                /*  var str = $(this).val();
                    var dims = str.split(',');
                    console.log("Dims: ");
                    var xPix = parseInt(dims[0]) * DPI;
                    var yPix = parseInt(dims[1]) * DPI;
                    console.log("XPIX: " + xPix);

                    vectorEditor.createRectangle(0, 0, xPix, yPix, "rgb(255, 0, 0)", "rgb(0, 0, 0)");
                    vectorEditor.centerTextEditor();

                    console.log($(this).val());*/
            });

            $("#selPlateBackground").change(function () {
                console.log($(this).selected);
                setSelectedBackgroundColor();

                initializeEditableRectangle();
            })

            $("#selPlateBackground option").hover(function (e) {
                e.preventDefault();
                console.log("mouseover");
                console.log($(this));
            })

            function setSelectedBackgroundColor() {
                var color = $("#selPlateBackground").find('option:selected').attr('value');
                $("#selPlateBackground").css('background', color);
                //  var bgColor = $('#selPlateBackground :selected').css('backgroundColor');
                //alert(bgColor);
            }

            //#region addlines
            $("#btnAddLine").click(function () {
                console.log("btn clicked");
                //$("#")
                var rowCount = $('#tblLines tr').length;

                // create the new row with id
                var newRow = document.createElement("tr");
                var newRowId = "inp" + (rowCount + 1);
                var newTextBoxId = "txt" + (rowCount + 1);
                newRow.setAttribute("id", newRowId);

                var selFontSizeClone = $("#selFontSize").clone();
                selFontSizeClone.css("visibility", "visible");

                var selFontFamilyClone = $("#selFontFamily").clone();
                selFontFamilyClone.css("visibility", "visible");

                var dvVertCenterClone = $("#dvVertCenter").clone();
                dvVertCenterClone.css("visibility", "visible");

                var dvHorzCenterClone = $("#dvHorzCenter").clone();
                dvHorzCenterClone.css("visibility", "visible");

                var inpLineClone = $("#inpLine").clone();
                inpLineClone.css("visibility", "visible");
                var inpLineCloneId = "inpLine" + rowCount;
                inpLineClone.attr("id", inpLineCloneId);

                $(newRow).append("<td></td><td></td><td></td><td></td><td></td>")
                $("#tblLines > tbody:last-child").append(newRow);

                $("#" + newRowId + " td:nth-child(2)").append(selFontSizeClone);
                $("#" + newRowId + " td:nth-child(3)").append(selFontFamilyClone);
                $("#" + newRowId + " td:nth-child(4)").append(dvVertCenterClone);
                $("#" + newRowId + " td:nth-child(5)").append(dvHorzCenterClone);
                $("#" + newRowId + " td:nth-child(1)").append(inpLineClone);

                console.log("selfontfanilyClone height: " + $(selFontFamilyClone).height());
                $(inpLineClone).css("height", $(selFontFamilyClone).height() + 4);

                $(inpLineClone).keyup(function (event) {
                    console.log("keyup");
                    console.log(this);
                    vectorEditor.setTextBoxContent($(this).val(), newTextBoxId);

                });
                // create an instance of the input text box and add it to the SVG editor

                var textEditClone = $("#tbdiv").clone();
                var svgDiv = $("#dvSVGContainer");


                vectorEditor.createTextBox(rowCount + 1, textEditClone, svgDiv);
            });


            //#endregion addlines



            $("#btnExportSVG").click(function () {

                var imageURI = vectorEditor.exportSVG();
                // Save dataURI to seesion here calling an mvc action
                // use form files instead
                //window.location.href = "/Cart/AddToCart?productId=2&returnUrl=../PanelTags";

                $.ajax({
                    url: '/Cart/AddToCartWithSVG',
                    type: 'POST',
                    async: false,
                    dataType: null,
                    data: {
                        productId: 2,
                        imageURI: imageURI
                    },
                    success: function (data) {
                        console.log(data);
                    }
                });
            });

        });

        /******    TEST CODE ******/
        function img_and_link() {
            $('body').append(
                $('<a>')
                    .attr('href-lang', 'image/svg+xml')
                    .attr('href', 'data:image/svg+xml;utf8,' + unescape($('#svg')[0].outerHTML))
                    .text('Download')
            );
        }

        $("#btnAddItem3").click(function () {
            img_and_link();
            //var dataURI = vectorEditor.exportSVG();

            //$.ajax({
            //    url: '/Cart/AddToCartWithSVG',
            //    type: 'POST',
            //    async: false,
            //    dataType: null,
            //    data: {
            //        productId: 3,
            //        dataURI: dataURI
            //    },
            //    success: function (data) {
            //        console.log(data);
            //    }
            //});
        });
                                            /********  END TEST CODE **********/
    </script>

}

