@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Panel Tags</h1>

<label for="selPlateDimenions">Select Dimensions (W x H):</label>
<select id="selPlateDimensions">
    <option value="1,1">1" x 1"</option>
    <option value="2,1">2" x 1"</option>
    <option value="3,1">3" x 1"</option>
    <option value="4,1">4" x 1"</option>
    <option value="5,1">5" x 1"</option>
    <option value="6,1">6" x 1"</option>
    <option value="7,1">7" x 1"</option>
    <option value="8,1">8" x 1"</option>
    <option value="9,1">9" x 1"</option>
    <option value="10,1">10" x 1"</option>
    <option value="1,2">1" x 2"</option>
    <option value="2,2">2" x 2</option>
    <option value="3,2">3" x 2"</option>
    <option value="4,2">4" x 2"</option>
    <option value="5,2">5" x 2"</option>
    <option value="6,2">6" x 2"</option>
    <option value="7,2">7" x 2"</option>
    <option value="8,2">8" x 2"</option>
    <option value="9,2">9" x 2"</option>
    <option value="10,2">10" x 2"</option>
    <option value="1,3">1" x 3"</option>
    <option value="2,3">2" x 3"</option>
    <option value="3,3">3" x 3"</option>
    <option value="4,3">4" x 3"</option>
    <option value="5,3">5" x 3"</option>
    <option value="6,3">6" x 3"</option>
    <option value="7,3">7" x 3"</option>
    <option value="8,3">8" x 3"</option>
    <option value="9,3">9" x 3"</option>
    <option value="10,3">10" x 3"</option>
    <option value="1,4">1" x 4"</option>
    <option value="2,4">2" x 4"</option>
    <option value="3,4">3" x 4"</option>
    <option value="4,4">4" x 4"</option>
    <option value="5,4">5" x 4"</option>
    <option value="6,4">6" x 4"</option>
    <option value="7,4">7" x 4"</option>
    <option value="8,4">8" x 4"</option>
    <option value="9,4">9" x 4"</option>
    <option value="10,4">10" x 4"</option>
</select>
@*<input id="width" type="range" name="points" min="0" max="10"/>
    <input id="height" type="range" name="points" min="0" max="10" orient="vertical"/>*@

<label for="selPlateBackground">Select Background:</label>
<select id="selPlateBackground">
    <option value="#0000ff" style="background: blue;">blue</option>
    <option value="#00ff00" style="background: green;">green</option>
    <option value="#ff0000" style="background: red;">red</option>
    <option value="#ffffff" style="background: white;" selected>white</option>
</select>


<div class="row">
    <div class="col-md-6" style="border-width: .5px; border-style: solid; min-height: 50px;">
        <button id="btnAddLine">Add Text Line</button>
        <table id="tblLines">

            <tbody>
            </tbody>
        </table> 
    </div>
    <div class="col-md-6">
        <!-- DPI IS 96 - NOT SURE IF THIS CAN BE CHANGED. -->
        <div id="dvSVGContainer" style="border-style: solid; color: rebeccapurple; border-width: 0.5px;">
            <div id="tbdiv" class="text-edit">
                <div class="editing-status">
                    <label>ES:</label>&nbsp;
                    <span>Not Started</span>
                </div>
                <table>
                    <tr class="trEditTools">
                        <td class="tdEditTools" style="vertical-align:central;text-align: center;">
                            <div class="edit-tools-div" style="border-radius: 6px; border: 1px solid fuchsia; background-color: fuchsia; text-align: center; height: 35px; vertical-align: central; padding-top: 3px;">
                                <button class="DisplayEditToolsButton">Click To Edit</button>
                                <select class="font-size-sel EditTool" style="visibility: collapse; margin: auto;">
                                    <option value="6" style="font-size: 6px">6</option>
                                    <option value="8" style="font-size: 8px">8</option>
                                    <option value="10" style="font-size: 10px">10</option>
                                    <option value="11" style="font-size: 11px">11</option>
                                    <option value="12" style="font-size: 12px">12</option>
                                    <option value="14" style="font-size: 14px">14</option>
                                    <option value="16" style="font-size: 16px">16</option>
                                    <option value="18" style="font-size: 18px">18</option>
                                </select>
                                <select class="font-family-sel EditTool" style="visibility: collapse; width: 100px; margin: auto;" title="Fonts">
                                    <option style="font-family: Arial; font-style: italic; color: white; background-color: fuchsia" disabled selected>Select Font</option>
                                    <option style="font-family: Arial; background-color: white; font-style: normal">Arial</option>
                                    <option style="font-family: Courier New; background-color: white; font-style: normal">Courier New</option>
                                    <option style="font-family: Times New Roman; background-color: white; font-style: normal">Times New Roman</option>
                                </select>
                                <div class="vert-center-div EditTool" style="visibility:collapse; margin: auto; display: inline-block;"><button style="height: 25px; width: 24px; background: no-repeat url(/img/vertical_align_center.png);" />&nbsp;</div>
                                <div class="horz-center-div EditTool" style="visibility:collapse; margin: auto; display: inline-block;"><button style="height: 25px; width: 24px; background: no-repeat url(/img/horizontal_align_center.png);" />&nbsp;</div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div id="editTextContainer" class="edit-text-container" style="font-size: 18px; font-family: Courier New; text-align: center; border: .5px dashed orange; width: 250px;margin-left: -20px;">
                                <table style="border: solid .3px red; display: inline-table;padding: 0px;">
                                    <tr style="padding: 0px; margin: 0px;">
                                        <td>
                                            <div class="tb-div-header">
                                                <img src="~/img/move-cursor.svg" style="width:15px; height: 15px; border-width: .5px; border-style: solid;" />
                                            </div>
                                        </td>
                                        <td style="padding: 0px; margin: 0px;">
                                            <span class="editable-create" contenteditable="true">(Enter&nbsp;Text)</span>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>

<svg height="24" width="30" style="border: none">
    <defs>
        <marker id="markerArrow" markerWidth="13" markerHeight="13" refX="1" refY="3"
                orient="auto">
            <path d="M1,1 L1,5.5 L5,3 L1,1" style="fill: #000000;" />
        </marker>
    </defs>

    <line x1="0" y1="12" x2="20" y2="12" class="arrow" />
</svg>

<div>
    <input type="button" id="btnExportSVG" value="Export SVG" />
    <input type="button" id="btnAddItem3" value="Add Item 3" />
</div>

<svg id="svg2" width="100" height="100">
    <text x="0" y="0" dy="12" fill="black">One</text>
</svg>
<div style="width:550px; height: 350px; border-style: solid; border-width: 1px">
    @* <img id="svgURIDisplay">*@
    <object id="objSVGDisplay" data="" type="image/svg+xml" width="550" height="350">
    </object>

</div>
<p>waz up</p>
<svg width="400" height="200">
    <use xlink:href="#svg"></use>
</svg>
@*<div>
        <img id="svgURIDisplay" src="~/img/move-cursor.svg">
    </div>*@


@section Scripts{
    <script src="~/js/vectoreditor/underscore.js"></script>
    <script src="~/js/jquery/jquery.autosize.min.js"></script>
    <script src="~/js//vectoreditor/snap.svg-min.js"></script>
    <script src="~/js/vectoreditor/vectoreditor.js"></script>
    <script src="~/js/vectoreditor/texteditor.js"></script>
    <script>

        //vectorEditor.createRectangle(0, 0, 500, 150, "rgb(255, 0, 0)", "rgb(0, 0, 0)");
        //vectorEditor.centerTextEditor();
        var DPI = 96;


        $(document).ready(function () {

            setSelectedBackgroundColor();

            initializeEditableRectangle();

            //#region Initialization Methods

            function initializeEditableRectangle() {

                var str = $("#selPlateDimensions").val();
                var dims = str.split(',');
                var xPix = parseInt(dims[0]) * DPI;
                var yPix = parseInt(dims[1]) * DPI;

                var color = $("#selPlateBackground").find('option:selected').attr('value');

                // RESET THE svg dimensions here
                console.log("init width: " + xPix);

                console.log($("#dvSVGContainer"));
                //.css({ width: 100 }); ///.height(yPix);
                vectorEditor.createRectangle(0, 0, xPix, yPix, color, "rgb(0, 0, 0)");
                $("#dvSVGContainer").width(xPix).height(yPix);

                vectorEditor.centerTextEditor();
            }

            function initializeUserControls() {
                initializeDimensionsDropdown();
            }


            function initializeDimensionsDropdown() {
                //var option = document.createElement("option");
                //$("#selDimensions").
            }
            //#endregion Initialization Methods

            $("#selPlateDimensions").change(function () {
                console.log("selPlateDimensionsChanged");
                initializeEditableRectangle();


                //  var selected = $("select[name='selPlateDimenions'] option:selected");
                /*  var str = $(this).val();
                    var dims = str.split(',');
                    console.log("Dims: ");
                    var xPix = parseInt(dims[0]) * DPI;
                    var yPix = parseInt(dims[1]) * DPI;
                    console.log("XPIX: " + xPix);

                    vectorEditor.createRectangle(0, 0, xPix, yPix, "rgb(255, 0, 0)", "rgb(0, 0, 0)");
                    vectorEditor.centerTextEditor();

                    console.log($(this).val());*/
            });

            //#region background selection
            $("#selPlateBackground").change(function () {
                console.log($(this).selected);
                setSelectedBackgroundColor();

                initializeEditableRectangle();
            })

            $("#selPlateBackground option").hover(function (e) {
                e.preventDefault();
                console.log("mouseover");
                console.log($(this));
            })

            function setSelectedBackgroundColor() {
                var color = $("#selPlateBackground").find('option:selected').attr('value');
                $("#selPlateBackground").css('background', color);
                //  var bgColor = $('#selPlateBackground :selected').css('backgroundColor');
                //alert(bgColor);
            }
            //#endregion background selection

            //#region font selection
            function initSelFontFamily(selFontFamilyClone) {                
                initFirstOption(selFontFamilyClone);
                selFontFamilyClone[0].addEventListener("change", function () {
                    setSelFontFamily(selFontFamilyClone);
                });                
            }

            var orgFontStyle;
            var orgOpacity;
            var orgBackgroundColor;
            function initFirstOption(selFontFamilyClone) {
                //var option = $(selFontFamilyClone).find('option:first');
                //console.log("option");
                //console.log(option[0]);

                //save old css settings
                orgFontStyle = $(selFontFamilyClone).css("font-style");
                //orgOpacity = $(selFontFamilyClone).css("opacity");
                orgBackgroundColor = $(selFontFamilyClone).css("background-color");

                $(selFontFamilyClone).css("font-style", "italic");
                //$(selFontFamilyClone).css("opacity", ".3");
                $(selFontFamilyClone).css("background-color", "fuchsia");
            }

            function setSelFontFamily(selFontFamilyClone) {                
                var fontFamily = $(selFontFamilyClone).find('option:selected').text();
                console.log("Font family: " + fontFamily);
                console.log("Select ID: ");
                console.log($(selFontFamilyClone));


                $(selFontFamilyClone).css('font-family', fontFamily);
                $(selFontFamilyClone).css("font-style", orgFontStyle);
                $(selFontFamilyClone).css("opacity", orgOpacity);
                $(selFontFamilyClone).css("background-color", orgBackgroundColor);                
            }
            //#endregion font selection

            //#region addlines
            $("#btnAddLine").click(function () {
                // above code is no longer usedx
                var textEditClone = $("#tbdiv").clone();
                var svgDiv = $("#dvSVGContainer");                 

                initSelFontFamily($(textEditClone).find(".font-family-sel"));
                vectorEditor.createTextBox(0, textEditClone, svgDiv);
            });


            //#endregion addlines



            $("#btnExportSVG").click(function () {

                var imageURI = vectorEditor.exportSVG();
                // Save dataURI to seesion here calling an mvc action
                // use form files instead
                //window.location.href = "/Cart/AddToCart?productId=2&returnUrl=../PanelTags";

                $.ajax({
                    url: '/Cart/AddToCartWithSVG',
                    type: 'POST',
                    async: false,
                    dataType: null,
                    data: {
                        productId: 2,
                        imageURI: imageURI
                    },
                    success: function (data) {
                        console.log(data);
                    }
                });
            });

        });

        /******    TEST CODE ******/
        function img_and_link() {
            $('body').append(
                $('<a>')
                    .attr('href-lang', 'image/svg+xml')
                    .attr('href', 'data:image/svg+xml;utf8,' + unescape($('#svg')[0].outerHTML))
                    .text('Download')
            );
        }

        $("#btnAddItem3").click(function () {
            img_and_link();
            //var dataURI = vectorEditor.exportSVG();

            //$.ajax({
            //    url: '/Cart/AddToCartWithSVG',
            //    type: 'POST',
            //    async: false,
            //    dataType: null,
            //    data: {
            //        productId: 3,
            //        dataURI: dataURI
            //    },
            //    success: function (data) {
            //        console.log(data);
            //    }
            //});
        });
                                                /********  END TEST CODE **********/
    </script>

}

